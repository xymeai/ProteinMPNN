[build-system]
requires = ["hatchling<=1.20"]
build-backend = "hatchling.build"

[project]
name = "proteinmpnn-xyme"
dynamic = ["version"]
description = ""
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Adrian Schreyer" }]
maintainers = [{ name = "Adrian Schreyer" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
]

dependencies = [
    "numpy<2.0",
    "torch==2.0.1",
    "torchvision==0.15.2",
    "torchaudio==2.0.2",
]

[dependency-groups]
dev = [
    "ruff>=0.7.3", 
    "pytest>=8.0", 
    "mypy>=1.10"
]

[project.scripts]
proteinmpnn = "proteinmpnn.__main__:main"

[project.urls]
repository = 'https://github.com/xymeai/proteinmpnn.git'
issue-tracker = 'https://github.com/xymeai/proteinmpnn/issues'

[tool.hatch.version]
path = "src/proteinmpnn/version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/proteinmpnn"]

[tool.uv.sources]
torch = { index = "pytorch" }
torchvision = { index = "pytorch" }
torchaudio = { index = "pytorch" }

[[tool.uv.index]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
explicit_package_bases = true
files = ['src/', 'tests/']
ignore_missing_imports = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
namespace_packages = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["--doctest-modules"]
testpaths = ["src", "tests"]

[tool.ruff]

# Set the maximum line length to 88 (same as black).
line-length = 88
namespace-packages = ["src/proteinmpnn"]
respect-gitignore = true
show-fixes = true
fix = true
target-version = "py310"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimz
    "E",   # pycodestyle error
    "G",   # flake8-logging-format
    "I",   # isort
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # Ruff-specific rules
    "S",   # flake8-bandit
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "T20", # flake8-print
    "UP",  # pyupgrade
    "W",   # pycodestyle warning
    "YTT", # flake8-2020
]

ignore = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
